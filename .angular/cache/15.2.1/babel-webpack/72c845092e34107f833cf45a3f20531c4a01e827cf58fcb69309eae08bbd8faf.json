{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../login.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(http, logintoken, router, SpinnerService) {\n    this.http = http;\n    this.logintoken = logintoken;\n    this.router = router;\n    this.SpinnerService = SpinnerService;\n  }\n  ngOnInit() {}\n  // onSubmit(form: NgForm) {\n  //   this.logintoken.getLoginToken(\n  //     form.value.email,\n  //     form.value.password\n  //   );\n  // }\n  onSubmit(form) {\n    this.SpinnerService.show();\n    let res = this.logintoken.getLoginToken(form.value.email, form.value.password);\n    res.subscribe(data => {\n      localStorage.setItem('token', data['token']);\n      console.log(data['token']);\n      this.SpinnerService.hide();\n      if (['token']) {\n        this.navigateToHome();\n      }\n    }, err => {\n      alert('Please Enter Correct Credentials!');\n    });\n  }\n  navigateToHome() {\n    this.router.navigate(['home']);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NgxSpinnerService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[1, \"back\"], [1, \"div-center\"], [1, \"content\"], [3, \"ngSubmit\"], [\"Form\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"email\", \"id\", \"exampleInputEmail1\", \"placeholder\", \"Email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\"], [\"type\", \"password\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"Password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"bdColor\", \"rgba(51, 51, 51, 0.8)\", \"size\", \"default\", \"type\", \"ball-spin-clockwise\"], [2, \"color\", \"white\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" . \");\n      i0.ɵɵelementStart(17, \"ngx-spinner\", 10)(18, \"p\", 11);\n      i0.ɵɵtext(19, \"Please Wait.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 12);\n      i0.ɵɵtext(21, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"hr\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.EmailValidator, i5.NgModel, i5.NgForm, i4.NgxSpinnerComponent],\n  styles: [\"back[_ngcontent-%COMP%] {\\r\\n  background: #e2e2e2;\\r\\n  width: 100%;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.div-center[_ngcontent-%COMP%] {\\r\\n  width: 400px;\\r\\n  height: 400px;\\r\\n  background-color: #fff;\\r\\n  position: absolute;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  margin: auto;\\r\\n  max-width: 100%;\\r\\n  max-height: 100%;\\r\\n  overflow: auto;\\r\\n  padding: 1em 2em;\\r\\n  border-bottom: 2px solid #ccc;\\r\\n  display: table;\\r\\n}\\r\\n\\r\\ndiv.content[_ngcontent-%COMP%] {\\r\\n  display: table-cell;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  margin-top: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsT0FBTztFQUNQLFFBQVE7RUFDUixNQUFNO0VBQ04sU0FBUztFQUNULFlBQVk7RUFDWixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsNkJBQTZCO0VBQzdCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbImJhY2sge1xyXG4gIGJhY2tncm91bmQ6ICNlMmUyZTI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuXHJcbi5kaXYtY2VudGVyIHtcclxuICB3aWR0aDogNDAwcHg7XHJcbiAgaGVpZ2h0OiA0MDBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHRvcDogMDtcclxuICBib3R0b206IDA7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIHBhZGRpbmc6IDFlbSAyZW07XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNjY2M7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcbn1cclxuXHJcbmRpdi5jb250ZW50IHtcclxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;AAYA,OAAM,MAAOA,cAAc;EACzBC,YACUC,IAAgB,EAChBC,UAAwB,EACxBC,MAAc,EACdC,cAAiC;IAHjC,SAAI,GAAJH,IAAI;IACJ,eAAU,GAAVC,UAAU;IACV,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;EAExB;EAEAC,QAAQ,IACR;EAEA;EACA;EACA;EACA;EACA;EACA;EAGAC,QAAQ,CAACC,IAAY;IACnB,IAAI,CAACH,cAAc,CAACI,IAAI,EAAE;IAC1B,IAAIC,GAAG,GAAG,IAAI,CAACP,UAAU,CAACQ,aAAa,CACrCH,IAAI,CAACI,KAAK,CAACC,KAAK,EAChBL,IAAI,CAACI,KAAK,CAACE,QAAQ,CACpB;IAEDJ,GAAG,CAACK,SAAS,CACVC,IAAI,IAAI;MACPC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAAC,OAAO,CAAC,CAAC;MAC5CG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAACX,cAAc,CAACgB,IAAI,EAAE;MAC1B,IAAI,CAAC,OAAO,CAAC,EAAE;QACb,IAAI,CAACC,cAAc,EAAE;;IAEzB,CAAC,EACAC,GAAsB,IAAI;MACzBC,KAAK,CAAC,mCAAmC,CAAC;IAC5C,CAAC,CACF;EACH;EAEAF,cAAc;IACZ,IAAI,CAAClB,MAAM,CAACqB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;EAChC;;;mBA5CWzB,cAAc;AAAA;;QAAdA,cAAc;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCZ3BC,8BAAkB;MAGRA,qBAAK;MAAAA,iBAAK;MACdA,qBAAM;MACNA,kCAAiD;MAA5BA;QAAAA;QAAA;QAAA,OAAYA,gCAAc;MAAA,EAAC;MAC9CA,8BAAwB;MACUA,8BAAa;MAAAA,iBAAQ;MACrDA,4BASE;MACJA,iBAAM;MACNA,+BAAwB;MACaA,yBAAQ;MAAAA,iBAAQ;MACnDA,4BAQE;MACJA,iBAAM;MACNA,oBACA;MAAAA,wCAIC;MACyBA,6BAAY;MAAAA,iBAAI;MAE1CA,mCAAuE;MACrEA,wBACF;MAAAA,iBAAS;MACTA,sBAAM;MACRA,iBAAO;;;;MAJyCA,gBAAwB;MAAxBA,qCAAwB","names":["LoginComponent","constructor","http","logintoken","router","SpinnerService","ngOnInit","onSubmit","form","show","res","getLoginToken","value","email","password","subscribe","data","localStorage","setItem","console","log","hide","navigateToHome","err","alert","navigate","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Practice_Projects\\Dashboard\\Dashboard\\src\\app\\login\\login.component.ts","D:\\Practice_Projects\\Dashboard\\Dashboard\\src\\app\\login\\login.component.html"],"sourcesContent":["import {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {NgxSpinnerService} from 'ngx-spinner';\r\nimport {LoginService} from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private logintoken: LoginService,\r\n    private router: Router,\r\n    private SpinnerService: NgxSpinnerService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // onSubmit(form: NgForm) {\r\n  //   this.logintoken.getLoginToken(\r\n  //     form.value.email,\r\n  //     form.value.password\r\n  //   );\r\n  // }\r\n\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.SpinnerService.show();\r\n    let res = this.logintoken.getLoginToken(\r\n      form.value.email,\r\n      form.value.password\r\n    );\r\n\r\n    res.subscribe(\r\n      (data) => {\r\n        localStorage.setItem('token', data['token']);\r\n        console.log(data['token']);\r\n        this.SpinnerService.hide();\r\n        if (['token']) {\r\n          this.navigateToHome();\r\n        }\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        alert('Please Enter Correct Credentials!');\r\n      }\r\n    );\r\n  }\r\n\r\n  navigateToHome() {\r\n    this.router.navigate(['home']);\r\n  }\r\n}\r\n","<div class=\"back\">\r\n  <div class=\"div-center\">\r\n    <div class=\"content\">\r\n      <h3>Login</h3>\r\n      <hr />\r\n      <form #Form=\"ngForm\" (ngSubmit)=\"onSubmit(Form)\">\r\n        <div class=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            placeholder=\"Email\"\r\n            ngModel\r\n            name=\"email\"\r\n            required\r\n            email\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"exampleInputPassword1\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Password\"\r\n            ngModel\r\n            name=\"password\"\r\n            required\r\n          />\r\n        </div>\r\n        .\r\n        <ngx-spinner\r\n          bdColor=\"rgba(51, 51, 51, 0.8)\"\r\n          size=\"default\"\r\n          type=\"ball-spin-clockwise\"\r\n        >\r\n          <p style=\"color: white\">Please Wait.</p>\r\n        </ngx-spinner>\r\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!Form.valid\">\r\n          Login\r\n        </button>\r\n        <hr />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}